15 files

(Superfluous::Data::Dict) {
  @id: (NilClass) nil
  @index: (NilClass) nil
  dots: (Superfluous::Data::Dict) {
    @id: (Symbol) :dots
    @index: (NilClass) nil
    become: (Superfluous::Data::Dict) {
      @id: (Symbol) :become
      @index: (NilClass) nil
      tree: (Superfluous::Data::Dict) {
        @id: (Symbol) :tree
        @index: (NilClass) nil
        traversals: (Superfluous::Data::Dict) {
          @id: (Symbol) :traversals
          @index: (NilClass) nil
          c: (String) "seagull"
          w: (String) "uu"
          x: (String) "extra"
          y: (String) "why not?"
          z: (String) "xylophone"
        }
      }
    }
  }
  image: (Superfluous::Data::Dict) {
    @id: (Symbol) :image
    @index: (NilClass) nil
    png: (Pathname) "<project_dir>/data parsing/data/image.png"
  }
  json: (Superfluous::Data::Dict) {
    @id: (Symbol) :json
    @index: (NilClass) nil
    foo: (Superfluous::Data::Array) [
      (String) "bar"
      (Integer) 17
    ]
  }
  json_array: (Superfluous::Data::Array) [
    (Integer) 37
    (String) "ahoy"
    (Superfluous::Data::Dict) {
      @id: (NilClass) nil
      @index: (Integer) 2
      key: (String) "exciting value"
    }
  ]
  json_bare_int: (Integer) 37
  json_bare_string: (String) "a string"
  markdown: (Superfluous::Data::Dict) {
    @id: (Symbol) :markdown
    @index: (NilClass) nil
    content: (String) "<h1 id=\"awesome-color-names\">Awesome color names</h1>\n\n<ul>\n  <li>bistre</li>\n  <li>cinereous</li>\n  <li>eburnean</li>\n  <li>falu</li>\n  <li>fulvous</li>\n  <li>gamboge</li>\n  <li>glaucous</li>\n  <li>isabelline</li>\n  <li>lazuli</li>\n  <li>murrey</li>\n</ul>\n\n<p>But wait! Thereâ€™s <em>more</em>!</p>\n\n<ul>\n  <li>nacarat</li>\n  <li>nadeshiko</li>\n  <li>pervenche</li>\n  <li>phthalocyanine</li>\n  <li>sinopia</li>\n  <li>smaragdine</li>\n  <li>verdigris</li>\n  <li>viridian</li>\n  <li>wenge</li>\n  <li>zaffre</li>\n</ul>\n"
  }
  markdown-metadata: (Superfluous::Data::Dict) {
    @id: (Symbol) :"markdown-metadata"
    @index: (NilClass) nil
    content: (String) "<h1 id=\"markdown-story\">Markdown Story</h1>\n\n<p>It was a dark and stormy night.</p>\n\n<p>The End</p>\n"
    title: (String) "Very Exciting Story"
    weather: (String) "stormy"
  }
  plaintext: (Superfluous::Data::Dict) {
    @id: (Symbol) :plaintext
    @index: (NilClass) nil
    txt: (Pathname) "<project_dir>/data parsing/data/plaintext.txt"
  }
  yaml: (Superfluous::Data::Array) [
    (Superfluous::Data::Dict) {
      @id: (NilClass) nil
      @index: (Integer) 0
      also: (String) "another value"
      key: (String) "value"
    }
    (Integer) 17
  ]
  yaml_bare_int: (Integer) 17
}
